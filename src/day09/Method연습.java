package day09;

public class Method연습 {

	public static void main(String[] args) {
		/* 정리
		 * 1. 변수
		 *   - 일반변수(지역변수, 기본형변수) : 값을 저장하는 기본 메모리공간
		 *     - 정수형 : int, byte, short, long(접미사 l(L))
		 *     - 실수형 : double, float(접미사 f(F))
		 *     - 정수형(문자) : char(정수형, 아스키코드 문자표에 저장되어 있는 코드로 저장)[1글자]
		 *     - boolean : ture / false
		 *   - 참조변수 : 객체의 주소를 저장하는 변수(객체명) : new 키워드를 통해 객체를 생성
		 *     - 힙 영역에 객체가 생성, 스택영역에 객체의 주소를 연결
		 *     - 기본형(일반변수)를 제외한 모든 현태는 참조변수
		 *   - 자료형 변환 : 변수, 상수, 리터럴 값들을 일시적으로 다른 자료형으로 변환
		 *     - 자동형변환 : 정수 -> 실수, 작은공간 -> 큰공간
		 *     - 명시적형변환 : 자동형변황이 안되는 형태  (자료형)변수명
		 *     
		 * 2. 연산
		 * ...
		 * ...
		 * ...
		 * ...
		 * 
		 * 7. 메서드
		 *   - 메서드 : 기능 (특정 기능을 하는 하나의 명령문)
		 *     접근제한자 리턴타입 메서드명(매개변수) {
		 *     실행문;
		 *     }
		 *   - 접근제한자(제어자)
		 *     - public : 모두 사용 가능  => 메서드는 public으로 선언
		 *     - protected : 나 + 패키지 + 자식클래스
		 *     - (defalut) : 나 + 패키지
		 *     - private : 나 => 멤버변수는 private로 선언
		 *   - static : 메모리에 가장 먼저 올라가는 키워드
		 *   - 메서드에 static이 있으면 클래스메서드라고 부름
		 *   - static이 있으면 객체생성을 하지않고, 클래스메서드, 클래스변수를 호출가능  
		 *   - static => 클래스명.메서드명(), 클래스명.변수() 사용 
		 *   
		 *   - 리턴타입 : 메서드를 실행한 후 결과값을 돌려주는 형태
		 *     - 자료형으로만 사용
		 *     - 결과값이 없을 경우 => void
		 *     - return 값;
		 *     
		 *   - 메서드는 하나의 기능만을 기준으로 만들어주는것이 원칙!!  
		 *   
		 * 8. 클래스 - 설계도
		 *   - 객체를 생성하기 위하 설계도 
		 *   - 메서드 : 기능
		 *   클래스의 구성정보
		 *     - 속성 : 멤버변수
		 *     - 기능 : 메서드
		 *     
		 * 접근제한자 class 클래스명{
		 * // 클래스명은 반드시 대문자로 시작 
		 * }
		 * 
		 * // 변수/객체와 메서드명은 소문자로 시작 
		 * 
		 * 
		 * - 객체 선언
		 * 클래스명 객체명 = new 클래스명();
		 * - 메서드 사용
		 * 객체명.메서드명()
		 * - 멤버변수 사용
		 * 객체명.멤버변수() => 일반적으로 멤버변수는 private으로 선언되기 때문에 보통은 호출 불가능
		 * 
		 * - gettet / settet 메서드를 만들어 private의 멤버변수에 접근
		 * 
		 * - 같은 클래스안에서 메서드를 호출할 때는 메서드명으로 호출 => 메서드명()
		 * - 다른 클래스안에서 메서드를 호출할 때는 객체명을 이용하여 호출 => 객체명.메서드명()
		 * 
		 * */
	}

}
